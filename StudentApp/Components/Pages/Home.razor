@page "/"
@page "/index/{PageTheme}"
@using StudentApp.Models
@using StudentApp.Components.Spinners
<link rel="stylesheet" href="_content/Radzen.Blazor/css/@ThemeValue">
<PageTitle>Student App</PageTitle>
@if (string.IsNullOrEmpty(ThemeValue))
{
    <RadzenStack Orientation="Radzen.Orientation.Vertical" JustifyContent="JustifyContent.Center" AlignItems="Radzen.AlignItems.Center" Wrap="FlexWrap.Wrap" style="height: 100vh;">
        <CustomeSpinner IsVisible="true" />
    </RadzenStack>
}
else
{
    <div style="float:right; position:relative">
        <RadzenLabel Text="Change Theme" Component="DropDownBindValue" Style="margin-right: 8px; vertical-align: middle;" />
        <RadzenDropDown Change="ChangeTheme" Name="DropDownBindValue" @bind-Value="Theme" Data="@Themes" TValue="string" />
    </div>
    <h1>Registration</h1>
    <RadzenTemplateForm TItem="Student" Data=@Student Submit=@(()=>AddStudent(Student)) InvalidSubmit=@OnInvalidSubmit>
        <RadzenStack>
            <RadzenFieldset Text="Registration Form">
                <RadzenRow AlignItems="AlignItems.End" Wrap="FlexWrap.Wrap" Gap="1rem" Class="rz-p-sm-12">

                    <RadzenColumn Size="6" SizeSM="6">
                        <RadzenFormField Text="First Name" Style="width: 100%;">
                            <ChildContent>
                                <RadzenTextBox Name="FirstName" @bind-Value="@Student.FirstName" Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="FirstName" Text="First Name is required" Popup=@popup Style="position: absolute" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6" SizeSM="6">
                        <RadzenFormField Text="Last Name" Style="width: 100%;">
                            <ChildContent>
                                <RadzenTextBox Name="LastName" @bind-Value="@Student.LastName" Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="LastName" Text="Last Name is required" Popup=@popup Style="position: absolute" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeSM="12">
                        <RadzenFormField Text="Address" Style="width: 100%;">
                            <ChildContent>
                                <RadzenTextBox Name="Address" @bind-Value="@Student.Address" Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="Address" Text="Address is required" Popup=@popup Style="position: absolute" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6" SizeSM="6">
                        <RadzenFormField Text="Personal ID" Style="width: 100%;">
                            <ChildContent>
                                <RadzenNumeric Name="NRC" ShowUpDown="false" @bind-Value="@Student.Nrc" Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="NRC" Text="NRC is required" Popup=@popup Style="position: absolute" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6" SizeSM="6">
                        <RadzenFormField Text="Phone Number" Style="width: 100%;">
                            <ChildContent>
                                <RadzenTextBox Name="PhoneNumber" @bind-Value="@Student.PhoneNumber" Style="width: 100%;" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="PhoneNumber" Text="Phone Number is required" Popup=@popup Style="position: absolute" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Size="6" SizeSM="6">
                        <RadzenFormField Text="Program" Style="width: 100%; padding-bottom: 2px;">
                            <ChildContent>
                                <RadzenDropDown Style="margin:14px" Name="Program" TValue="int?" Data="@programs" TextProperty="Name" @bind-Value="Student.ProgramId" ValueProperty="Id" />
                            </ChildContent>
                            <Helper>
                                <RadzenRequiredValidator Component="Program" Text="Program is required" Popup=@popup Style="position: absolute" />
                            </Helper>
                        </RadzenFormField>
                    </RadzenColumn>
                    <RadzenColumn Style="padding:2px" Size="6" SizeSM="6">
                        <div>
                            <RadzenCard>
                                <InputFile OnChange="OnFileInput" />
                            </RadzenCard>
                        </div>
                    </RadzenColumn>
                    <RadzenColumn Size="6" SizeSM="6">
                        <RadzenButton Click="ClearFields" Text="Clear" ButtonStyle="ButtonStyle.Light" Style="width:100%" />
                    </RadzenColumn>
                    <RadzenColumn Size="6" SizeSM="6">
                        <RadzenButton Text="Submit" ButtonType="ButtonType.Submit" ButtonStyle="ButtonStyle.Primary" Style="width:100%" />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenFieldset>
        </RadzenStack>
    </RadzenTemplateForm>
    <RadzenText Text="@AttachmentInfo" @bind-value="@AttachmentInfo" />
    <RadzenProgressBar Value="100" Visible="IsLoading" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
    @if ((programs != null && programs.Any()))
    {
        <RadzenStack Style="margin-top:15px; margin-bottom: 15px">
            <RadzenDataGrid AllowRowSelectOnRowClick="@allowRowSelectOnRowClick" @bind-Value=@selectedStudents SelectionMode="DataGridSelectionMode.Multiple" AllowColumnReorder="false" AllowColumnResize="true" AllowPaging="true" AllowFiltering="true" FilterIcon="filter" AllowColumnPicking="true" FilterMode="FilterMode.Simple" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" PageSize="10" Data="students" @ref="StudentDataGrid" TItem="Student">
                <Columns>
                    <RadzenDataGridColumn Width="50px" Sortable="false" Filterable="false">
                        <HeaderTemplate>
                            <RadzenCheckBox TabIndex="-1" TriState="false" TValue="bool?" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select all items" }})"
                                            Value="@(selectedStudents == null || selectedStudents?.Any() != true ? false : !students.All(i => selectedStudents.Contains(i)) ? null : students.Any(i => selectedStudents.Contains(i)))"
                                            Change="@(args => selectedStudents = args == true ? students?.ToList() : null)" />
                        </HeaderTemplate>
                        <Template Context="data">
                            <RadzenCheckBox TabIndex="-1" TriState="false" Value="@(selectedStudents != null && selectedStudents.Contains(data))" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Select item" }})"
                                            TValue="bool" Change=@(args => { if(!allowRowSelectOnRowClick) { StudentDataGrid?.SelectRow(data); }}) />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="100px" TItem="Student" Property="FirstName" Title="First Name" />
                    <RadzenDataGridColumn  Width="100px" TItem="Student" Property="LastName" Title="Last Name" />
                    <RadzenDataGridColumn Width="100px" TItem="Student" FilterValue="@nrcValue" Filterable="true" Property="Nrc" Title="Personal ID">
                        <FilterTemplate>
                            <RadzenNumeric @bind-Value=nrcValue ShowUpDown=false Style="width:100%" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "filter by ID" }})" />
                        </FilterTemplate>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn  Width="150px" TItem="Student" Property="Address" Title="Address" />
                    <RadzenDataGridColumn  Width="100px" TItem="Student" Property="PhoneNumber" Title="Phone Number" />
                    <RadzenDataGridColumn Width="100px" TItem="Student" Property="Program" Title="Program">
                        <Template>
                            @(programs?.First(p => p.Id == context.ProgramId).Name)
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn  Width="60px" TItem="Student" Property="StudentId" Title="Student Number" />
                    <RadzenDataGridColumn  Width="150px" TItem="Student" Property="DateCreated" Title="Date Created" />
                    <RadzenDataGridColumn Width="150px" TItem="Student" Visible="false" Property="LastModified" Title="Last Modified" />
                    <RadzenDataGridColumn Width="150px" Filterable="false" TItem="Student" Property="Attachment" Title="Attachment">
                        <Template>
                            <RadzenIcon Style="cursor:pointer;" @onclick="(()=>ViewSingleAttachedDocument(context.AttchmentId))" Icon="file_open" IconColor="@Colors.InfoLight" />
                            <RadzenIcon Style="cursor:pointer; margin-left: 20px" @onclick="(()=>DownloadSingleAttachedDocument(context.AttchmentId))" Icon="download" IconColor="@Colors.Primary" />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="60px" Pickable="false" Title="Edit">
                        <Template>
                            <RadzenIcon Style="cursor:pointer" @onclick="(()=>OpenEditDialog(context, context.Id, context.AttchmentId))" Icon="edit" IconColor="@Colors.InfoLight" />
                        </Template>
                    </RadzenDataGridColumn>
                    <RadzenDataGridColumn Width="60px" Pickable="false" Title="Delete">
                        <Template>
                            <RadzenIcon @onclick="(()=>DeleteStudent(context.Id))" Style="cursor:pointer" Icon="delete" IconColor="@Colors.Danger" />
                        </Template>
                    </RadzenDataGridColumn>
                </Columns>
            </RadzenDataGrid>
        </RadzenStack>
    }
    else
    {
        <RadzenStack Orientation="Radzen.Orientation.Vertical" JustifyContent="JustifyContent.Start" AlignItems="Radzen.AlignItems.Center" Wrap="FlexWrap.Wrap" style="height: 100vh;">
            <CustomeSpinner IsVisible="true" />
        </RadzenStack>
    }
}






